- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Locate running EC2 instances
      vars:
        ansible_python_interpreter: /usr/local/bin/python3
      ec2_instance_info:
        region: us-east-1
        aws_access_key: ASIAQLFOWTE2RHO6U34P
        aws_secret_key: cUVXcRT7PMxz2lmyjHvq5ubxXjboRQmiORWcy/Sj
        security_token: FwoGZXIvYXdzEPv//////////wEaDBRrZHRn8JGdcKJXAyLGAbC5N8ZTSTpQzlM/euKN43Ee9uexxZjNZhIWpSfzO6p9N3H1s91g+xy5cN0e5TcOIdqywixU9GHKVCyDslivZa5byQRG43YjwtCqMP4SKzMOneQRjr9oU8a8v8QCw5kbxtyRz7sk4N7RhTVcx1RXib/0+tyF15d51Tm90GA+UUtbDD55TjH/pMEndW3W/gTv3xdZLhv9lszHO6eCL9vf5vb42nVvMTJ0yPQAd+iICaRqEOrdl634sROYlLDwioYCFFYNDHz/OCiNr4P/BTIt1vwpBDbbC2iwGuTG7AG5qMDy1VD1VgBHSpvWwu57Sr6mL7Hm3NF7unNyGCDC
      register: ec2_info

    - name: launch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-00ddb0e5626798373
        region: us-east-1
        key_name: test
        vpc_subnet_id: subnet-d2beea9f
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIAQLFOWTE2RHO6U34P
        aws_secret_key: cUVXcRT7PMxz2lmyjHvq5ubxXjboRQmiORWcy/Sj
        security_token: FwoGZXIvYXdzEPv//////////wEaDBRrZHRn8JGdcKJXAyLGAbC5N8ZTSTpQzlM/euKN43Ee9uexxZjNZhIWpSfzO6p9N3H1s91g+xy5cN0e5TcOIdqywixU9GHKVCyDslivZa5byQRG43YjwtCqMP4SKzMOneQRjr9oU8a8v8QCw5kbxtyRz7sk4N7RhTVcx1RXib/0+tyF15d51Tm90GA+UUtbDD55TjH/pMEndW3W/gTv3xdZLhv9lszHO6eCL9vf5vb42nVvMTJ0yPQAd+iICaRqEOrdl634sROYlLDwioYCFFYNDHz/OCiNr4P/BTIt1vwpBDbbC2iwGuTG7AG5qMDy1VD1VgBHSpvWwu57Sr6mL7Hm3NF7unNyGCDC
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=600 state=started
      with_items: '{{ec2.instances}}'

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
         name: docker
         state: started
         enabled: yes
      become: yes
    - name: Get project files from Git
      git:
         repo: "https://github.com/mariakoteneva/4IT572_DevOps_Semestralka.git"
         dest: ./app
    - name: Build docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 120
      poll: 0
      become: yes
    - wait_for:
        port: 80

- name: Terminate previous instances
  hosts: localhost
  connection: local

  tasks:
    - name: Terminate previous instances
      ec2:
        region: us-east-1
        state: 'absent'
        instance_ids: '{{ item.instance_id }}'
        aws_access_key: ASIAQLFOWTE2RHO6U34P
        aws_secret_key: cUVXcRT7PMxz2lmyjHvq5ubxXjboRQmiORWcy/Sj
        security_token: FwoGZXIvYXdzEPv//////////wEaDBRrZHRn8JGdcKJXAyLGAbC5N8ZTSTpQzlM/euKN43Ee9uexxZjNZhIWpSfzO6p9N3H1s91g+xy5cN0e5TcOIdqywixU9GHKVCyDslivZa5byQRG43YjwtCqMP4SKzMOneQRjr9oU8a8v8QCw5kbxtyRz7sk4N7RhTVcx1RXib/0+tyF15d51Tm90GA+UUtbDD55TjH/pMEndW3W/gTv3xdZLhv9lszHO6eCL9vf5vb42nVvMTJ0yPQAd+iICaRqEOrdl634sROYlLDwioYCFFYNDHz/OCiNr4P/BTIt1vwpBDbbC2iwGuTG7AG5qMDy1VD1VgBHSpvWwu57Sr6mL7Hm3NF7unNyGCDC
      loop: "{{ ec2_info.instances }}"
      loop_control:
        label: "{{ item.instance_id }}"